apiVersion: apps/v1
kind: Deployment
metadata:
  name: pactwise-frontend
  namespace: pactwise
  labels:
    app: pactwise
    component: frontend
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: pactwise
      component: frontend
  template:
    metadata:
      labels:
        app: pactwise
        component: frontend
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - pactwise
              topologyKey: kubernetes.io/hostname
      containers:
      - name: frontend
        image: pactwise/frontend:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 3000
          name: http
          protocol: TCP
        env:
        - name: NODE_ENV
          value: "production"
        - name: NEXT_PUBLIC_CONVEX_URL
          valueFrom:
            secretKeyRef:
              name: pactwise-secrets
              key: convex-url
        - name: NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY
          valueFrom:
            secretKeyRef:
              name: pactwise-secrets
              key: clerk-publishable-key
        - name: CLERK_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: pactwise-secrets
              key: clerk-secret-key
        - name: NEXT_PUBLIC_SENTRY_DSN
          valueFrom:
            secretKeyRef:
              name: pactwise-secrets
              key: sentry-dsn
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: pactwise-secrets
              key: redis-url
              optional: true
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        securityContext:
          runAsNonRoot: true
          runAsUser: 1001
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
      securityContext:
        fsGroup: 1001
---
apiVersion: v1
kind: Service
metadata:
  name: pactwise-frontend
  namespace: pactwise
  labels:
    app: pactwise
    component: frontend
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 3000
    protocol: TCP
    name: http
  selector:
    app: pactwise
    component: frontend
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: pactwise-frontend
  namespace: pactwise
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: pactwise-frontend
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60